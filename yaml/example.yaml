apiVersion: api.practice.com/v1alpha1
kind: Inspect
metadata:
  name: myinspect
spec:
  tasks:
    - task_name: task1
      type: script             # type 字段：可填写脚本或镜像 image script 两种
      script_location: local   # script_location 字段(目前未支持此功能) 可选填 local remote all 三种，分别对应 本地节点 远端节点 全部节点
      # 选取 local 本地节点 就不需要再填写远端 ip 地址
      # 远端要执行的目标 node
      # script字段：可填写 bash 脚本内容，controller 默认如果有 script字段，优先执行自定义脚本内容，"不执行 "source 字段脚本内容
      script: |
        #!/bin/bash

        # 获取内存使用率的函数
          get_memory_usage() {
          # 使用free命令获取内存信息，第二行的第三列为已使用的内存值
          total_memory=$(free | awk 'NR==2 {print $2}')
          used_memory=$(free | awk 'NR==2 {print $3}')
          # 计算内存使用率
          memory_usage=$(awk "BEGIN {printf \"%.2f\", $used_memory / $total_memory * 100}")
          echo $memory_usage
        }
        
          # 检查内存使用率是否超过80%
          memory_usage=$(get_memory_usage)
          echo "当前内存使用率: $memory_usage%"
          
          if (( $(echo "$memory_usage > 80" | bc -l) )); then
          echo "内存使用率超过80%！"
          # 在此处可以添加额外的操作，如发送警报通知等。
          fi
    - task_name: task2
      type: image
      source: try:latest  # source 字段：镜像名称
      restart: true       # 用于标示是否重新执行。
    - task_name: task3
      type: script             # type字段：可填写脚本或镜像 image script 两种
      script_location: remote  # script_location字段(目前未支持此功能) 可选填 local remote all 三种，分别对应 本地节点 远端节点 全部节点
      # 远端要执行的目标node的信息：user password ip 等
      remote_infos:
        - user: "root"
          password: "googs1025Aa"
          ip: "1.14.120.233"
      script: |
        #!/bin/bash
        # 获取内存使用率的函数
          get_memory_usage() {
          # 使用free命令获取内存信息，第二行的第三列为已使用的内存值
          total_memory=$(free | awk 'NR==2 {print $2}')
          used_memory=$(free | awk 'NR==2 {print $3}')
          # 计算内存使用率
          memory_usage=$(awk "BEGIN {printf \"%.2f\", $used_memory / $total_memory * 100}")
          echo $memory_usage
        }
        
        # 检查内存使用率是否超过80%
          memory_usage=$(get_memory_usage)
        echo "当前内存使用率: $memory_usage%"
          
          if (( $(echo "$memory_usage > 80" | bc -l) )); then
          echo "内存使用率超过80%！"
          # 在此处可以添加额外的操作，如发送警报通知等。
          fi

